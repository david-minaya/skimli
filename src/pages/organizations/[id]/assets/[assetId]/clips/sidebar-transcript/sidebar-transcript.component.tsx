import { Fragment, useCallback } from 'react';
import { SidebarContent } from '~/components/sidebar-content/sidebar-content.component';
import { useSubtitles } from '~/hooks/useSubtitles';
import { TranscriptItem } from '~/components/transcript-item/transcript-item.component';
import { useVideoPlayer } from '~/providers/VideoPlayerProvider';
import { Asset } from '~/types/assets.type';
import { useAssets } from '~/store/assets.slice';
import { style } from './sidebar-transcript.style';
import { Box } from '@mui/material';

interface Props {
  asset: Asset;
}

export function SidebarTranscript(props: Props) {

  const { asset } = props;
  const { status, cues, autogenerated } = useSubtitles(asset);
  const Assets = useAssets();
  const clip = Assets.getClip(asset.uuid);
  const videoPlayer = useVideoPlayer();

  const handleClick = useCallback((time: number) => {
    videoPlayer.updateProgress(time);
  }, []);

  function filter(cue: VTTCue) {
    return (
      (cue.startTime < clip!.startTime && cue.endTime > clip!.endTime) ||
      (cue.startTime >= clip!.startTime && cue.endTime <= clip!.endTime) ||
      (cue.endTime >= clip!.startTime && cue.endTime < clip!.endTime) ||
      (cue.startTime > clip!.startTime && cue.startTime <= clip!.endTime)
    );
  }

  if (!clip) return null;

  return (
    <SidebarContent 
      sx={style.sidebarContent}
      id='transcript'>
      <Box sx={style.header}>
        <Box sx={style.title}>Transcript</Box>
        {status.successfull &&
          <Fragment>
            {autogenerated
              ? <Box sx={style.autoTag}>Auto Generated</Box>
              : <Box sx={style.uploadedTag}>Uploaded</Box>
            }
          </Fragment>
        }
      </Box>
      <Box sx={style.content}>
        {status.loading && 'Loading...'}
        {status.empty && 'There aren\'t subtitles'}
        {status.error && 'Error'}
        {status.successfull &&
          cues.filter(filter).map(cue =>
            <TranscriptItem
              key={cue.startTime} 
              time={videoPlayer.currentTime}
              cue={cue}
              onClick={handleClick}/>
          )
        }
      </Box>
    </SidebarContent>
  );
}
