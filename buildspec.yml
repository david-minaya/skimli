version: 0.2
 
phases:
  pre_build:
    commands:
      - echo $(docker --version)
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - REPOSITORY_URI=$ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO_NAME
      - mkdir ~/.aws/ && echo [$PROFILE] > ~/.aws/credentials && echo aws_access_key_id=$KEY_ID >> ~/.aws/credentials && echo aws_secret_access_key=$KEY_SECRET >> ~/.aws/credentials
      - aws s3 cp s3://$CONFIG_BUCKET_NAME/Env/webapp.env ./.env --profile $PROFILE --region $AWS_DEFAULT_REGION
      - aws s3 cp s3://$CONFIG_BUCKET_NAME/Env/sentryclirc ./.sentryclirc --profile $PROFILE --region $AWS_DEFAULT_REGION
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - export DOCKER_BUILDKIT=1
      - docker build --cache-from $REPOSITORY_URI:latest -t $REPOSITORY_URI:latest --build-arg BUILDKIT_INLINE_CACHE=1 .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files: imagedefinitions.json
